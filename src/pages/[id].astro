---
import Layout from "../layouts/Layout.astro";

const { id } = Astro.params;
const response = await fetch(`http://localhost:3000/api/patients/${id}`);
if (!response.ok) {
  throw new Error(`Error ${response.status}: ${await response.text()}`);
}

const patient = await response.json();

if (!patient) {
  throw new Error("Paciente no encontrado");
}
---

<Layout title={`Historial Médico de ${patient.fullName}`}>
  <div class="flex flex-col max-w-4xl mx-auto gap-6">
    <h1 class="text-3xl font-semibold">{patient.fullName}</h1>

    <!-- Información del paciente -->
    <div class="bg-white dark:bg-gray-800 shadow-sm rounded-lg">
      <h3 class="text-lg font-medium text-gray-900 dark:text-gray-100 p-4">
        Información del Paciente
      </h3>
      <div
        class="flex flex-col border-t border-gray-200 dark:border-gray-700 px-4 py-5 gap-4"
      >
        <div id="form-data" class="grid grid-cols-2 gap-4">
          <div class="col-span-2">
            <label class="text-sm font-medium">Nombre Completo</label>
            <input
              type="text"
              id="fullName"
              value={patient.fullName}
              class="w-full rounded-md shadow-sm bg-gray-500 text-white px-2"
            />
          </div>
          <div>
            <label class="text-sm font-medium">Edad</label>
            <input
              type="number"
              id="age"
              value={patient.age}
              class="w-full rounded-md shadow-sm bg-gray-500 text-white px-2"
            />
          </div>
          <div>
            <label class="text-sm font-medium">Peso</label>
            <input
              type="number"
              id="weight"
              value={patient.weight}
              step="0.1"
              class="w-full rounded-md shadow-sm bg-gray-500 text-white px-2"
            />
          </div>
          <div>
            <label class="text-sm font-medium">Obra Social</label>
            <input
              type="text"
              id="insuranceProvider"
              value={patient.insuranceProvider}
              class="w-full rounded-md shadow-sm bg-gray-500 text-white px-2"
            />
          </div>
          <div>
            <label class="text-sm font-medium">Número de Obra Social</label>
            <input
              type="text"
              id="insuranceNumber"
              value={patient.insuranceNumber}
              class="w-full rounded-md shadow-sm bg-gray-500 text-white px-2"
            />
          </div>
        </div>
        <button
          id="saveButton"
          data-patient-id={id}
          class="mt-4 px-4 py-2 bg-blue-500 text-white rounded w-full"
        >
          Guardar Cambios
        </button>
      </div>
    </div>

    <!-- Consultas -->
    <div class="bg-white dark:bg-gray-800 shadow-sm rounded-lg">
      <h3 class="text-lg font-medium text-gray-900 dark:text-gray-100 p-4">
        Consultas
      </h3>
      <div class="border-t border-gray-200 dark:border-gray-700 px-4 py-5">
        <ul
          id="consultationList"
          class="divide-y divide-gray-200 dark:divide-gray-700"
        >
          {
            patient.consultations != null ? (
              patient.consultations.map((consultation) => (
                <li class="py-4 flex justify-between text-sm">
                  <div>
                    <p>
                      <strong>Fecha de Consulta: </strong>
                      {new Date(consultation.date).toLocaleDateString()}
                    </p>
                    <p>
                      <strong>Diagnóstico: </strong>
                      {consultation.diagnosis}
                    </p>
                    <p>
                      <strong>Notas: </strong>
                      {consultation.notes}
                    </p>
                  </div>
                </li>
              ))
            ) : (
              <li>No hay consultas disponibles.</li>
            )
          }
        </ul>
      </div>
    </div>

    <!-- Formulario para agregar una nueva consulta -->
    <div class="bg-white dark:bg-gray-800 shadow-sm rounded-lg mt-6">
      <h3 class="text-lg font-medium text-gray-900 dark:text-gray-100 p-4">
        Añadir Consulta
      </h3>
      <div class="border-t border-gray-200 dark:border-gray-700 px-4 py-5">
        <form id="addConsultationForm" class="grid grid-cols-2 gap-4">
          <label>
            Fecha de Consulta:
            <input
              type="date"
              id="consultationDate"
              class="w-full rounded-md shadow-sm bg-gray-500 text-white px-2"
            />
          </label>

          <label>
            Diagnóstico:
            <input
              type="text"
              id="consultationDiagnosis"
              class="w-full rounded-md shadow-sm bg-gray-500 text-white px-2"
            />
          </label>

          <label class="col-span-2">
            Notas:
            <textarea
              id="consultationNotes"
              class="w-full rounded-md shadow-sm bg-gray-500 text-white px-2"
            ></textarea>
          </label>

          <button
            type="submit"
            class="px-4 py-2 bg-green-500 text-white rounded col-span-2"
            >Añadir Consulta</button
          >
        </form>
      </div>
    </div>
  </div>

  <script>
    const patientId = document.getElementById("saveButton").dataset.patientId;
    const url = `http://localhost:3000/api/patients/${patientId}`;

    document
      .getElementById("saveButton")
      .addEventListener("click", async () => {
        const fullName = (
          document.getElementById("fullName") as HTMLInputElement
        ).value;
        const age = (document.getElementById("age") as HTMLInputElement).value;
        const weight = (document.getElementById("weight") as HTMLInputElement)
          .value;
        const insuranceProvider = (
          document.getElementById("insuranceProvider") as HTMLInputElement
        ).value;
        const insuranceNumber = (
          document.getElementById("insuranceNumber") as HTMLInputElement
        ).value;

        try {
          const response = await fetch(url, {
            method: "PUT",
            headers: {
              "Content-Type": "application/json",
            },
            body: JSON.stringify({
              fullName,
              age,
              weight,
              insuranceProvider,
              insuranceNumber,
            }),
          });

          if (response.ok) {
            alert("Cambios guardados con éxito");
          } else {
            const errorText = await response.text();
            alert(`Error al guardar cambios: ${errorText}`);
          }
        } catch (error) {
          console.error("Error al guardar cambios:", error);
          alert("Error al guardar cambios");
        }
      });

    document
      .getElementById("addConsultationForm")
      .addEventListener("submit", async (e) => {
        e.preventDefault();
        const date = (
          document.getElementById("consultationDate") as HTMLInputElement
        ).value;
        const diagnosis = (
          document.getElementById("consultationDiagnosis") as HTMLInputElement
        ).value;
        const notes = (
          document.getElementById("consultationNotes") as HTMLTextAreaElement
        ).value;

        try {
          const response = await fetch(`${url}/add-consultation`, {
            method: "POST",
            headers: {
              "Content-Type": "application/json",
            },
            body: JSON.stringify({ date, diagnosis, notes }),
          });

          if (response.ok) {
            window.location.reload();
          } else {
            const errorText = await response.text();
            alert(`Error al añadir consulta: ${errorText}`);
          }
        } catch (error) {
          console.error("Error al añadir consulta:", error);
          alert("Error al añadir consulta");
        }
      });
  </script>
</Layout>

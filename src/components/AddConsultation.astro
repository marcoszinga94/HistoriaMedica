---
const { patientId } = Astro.props;
---

<form
  id="consultationForm"
  class="space-y-4 bg-white dark:bg-gray-800 p-4 rounded-lg shadow-sm"
>
  <h2 class="text-lg font-semibold mb-4 text-gray-900 dark:text-gray-100">
    Agregar Nueva Consulta
  </h2>

  <div>
    <label
      for="date"
      class="block text-sm font-medium text-gray-700 dark:text-gray-300"
      >Fecha de la Consulta</label
    >
    <input
      type="date"
      name="date"
      id="date"
      required
      class="mt-1 block w-full rounded-md border-gray-300 shadow-sm dark:bg-gray-700 dark:border-gray-600 dark:text-white"
    />
  </div>

  <div>
    <label
      for="diagnosis"
      class="block text-sm font-medium text-gray-700 dark:text-gray-300"
      >Diagn√≥stico</label
    >
    <input
      type="text"
      name="diagnosis"
      id="diagnosis"
      required
      class="mt-1 block w-full rounded-md border-gray-300 shadow-sm dark:bg-gray-700 dark:border-gray-600 dark:text-white"
    />
  </div>

  <div>
    <label
      for="notes"
      class="block text-sm font-medium text-gray-700 dark:text-gray-300"
      >Notas</label
    >
    <textarea
      name="notes"
      id="notes"
      rows="3"
      class="mt-1 block w-full rounded-md border-gray-300 shadow-sm dark:bg-gray-700 dark:border-gray-600 dark:text-white"
    ></textarea>
  </div>

  <button
    type="submit"
    class="w-full bg-green-500 text-white py-2 rounded hover:bg-green-600"
  >
    Agregar Consulta
  </button>
</form>

<script is:inline define:vars={{ patientId }}>
  const form = document.getElementById("consultationForm");

  if (form) {
    form.addEventListener("submit", async (event) => {
      event.preventDefault();
      const formElement = event.target;

      if (!(formElement instanceof HTMLFormElement)) {
        return;
      }

      const formData = new FormData(formElement);
      const newConsultation = {
        isConsultation: true, // Indicador de que es una consulta
        patientId: patientId, // ID del paciente
        date: formData.get("date"),
        diagnosis: formData.get("diagnosis"),
        notes: formData.get("notes"),
      };

      try {
        const response = await fetch(`/api/patients`, {
          method: "POST",
          headers: { "Content-Type": "application/json" },
          body: JSON.stringify(newConsultation),
        });

        if (response.ok) {
          alert("Consulta agregada exitosamente");
          window.location.reload();
        } else {
          alert("Error al agregar la consulta");
        }
      } catch (error) {
        console.error("Error al agregar la consulta:", error);
      }
    });
  }
</script>
